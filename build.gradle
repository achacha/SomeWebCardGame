import org.flywaydb.gradle.task.FlywayCleanTask
import org.flywaydb.gradle.task.FlywayMigrateTask

buildscript {
    ext.kotlin_version = '1.2.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.postgresql:postgresql:${postgresVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.moowork.node' version '1.2.0'
    id 'org.flywaydb.flyway' version '5.0.7'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id "org.owasp.dependencycheck" version "3.1.1"
}

group 'org.achacha'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

/*
Load properties file from user home directory
 */
def homeProperties = new Properties()
file("${System.properties['user.home']}${File.separator}.sawcog.properties").withReader { homeProperties.load(it) }

//sourceSets['main'].allSource.add("webapp" as FileCollection)

apply from: 'dependencies.gradle'

// IntelliJ settings
idea {
    module {
        name = 'SomeWebCardGame'
        inheritOutputDirs = true

        sourceDirs += file("src/main/generated")
        testSourceDirs += file("src/test/generated_tests")

        generatedSourceDirs += file("src/main/generated")
        generatedSourceDirs += file("src/test/generated_tests")
    }
}

task ideaInfo {
    group 'help'
    description 'IntelliJ Idea info'
    println "idea.module.sourceDirs="+idea.module.sourceDirs
    println "idea.module.testSourceDirs="+idea.module.testSourceDirs
    println "idea.module.generatedSourceDirs="+idea.module.generatedSourceDirs
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/*
Flyway plugin handles DB migration
*/
flyway {
    url = "${homeProperties['db.jdbcUrl']}"
    driver = "${homeProperties['db.driverClassName']}"
    user = "${homeProperties['db.username']}"
    password = "${homeProperties['db.password']}"
    locations = [
            'filesystem:db/migration'
    ]
}

println "MODE=${homeProperties['mode']}"

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task copyJs(type: Copy, dependsOn: [ 'npmSetup', 'nodeSetup', 'yarn' ] ) {
    group 'build'
    description 'Copy JavaScript dependencies to webapp'
    from 'node_modules'
    include '*/dist/**/*'
    include '*/build/*'
    include 'font-awesome/css/*'
    include 'font-awesome/fonts/*'
    include 'requirejs/require.js'
    into "${projectDir}/src/main/webapp/js"
    includeEmptyDirs = false
}

task cleanJs(type: Delete) {
    group 'build'
    description 'Remove JavaScript from webapp'
    delete "${projectDir}/src/main/webapp/js"
}

war.dependsOn copyJs
clean.dependsOn cleanJs

task flywayCleanTest(type: FlywayCleanTask) {
    description 'Migrate Test database and populate test data'
    url = "${homeProperties['test.db.jdbcUrl']}"
    driver = "${homeProperties['test.db.driverClassName']}"
    user = "${homeProperties['test.db.username']}"
    password = "${homeProperties['test.db.password']}"
    locations = [
            'filesystem:db/migration',
            'filesystem:db/migration_test'
    ]
}
task flywayMigrateTest(type: FlywayMigrateTask, dependsOn: flywayCleanTest) {
    description 'Migrate Test database and populate test data'
    url = "${homeProperties['test.db.jdbcUrl']}"
    driver = "${homeProperties['test.db.driverClassName']}"
    user = "${homeProperties['test.db.username']}"
    password = "${homeProperties['test.db.password']}"
    locations = [
            'filesystem:db/migration',
            'filesystem:db/migration_test'
    ]
}

